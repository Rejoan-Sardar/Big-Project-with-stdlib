  

'use strict';

// MODULES //

var tape = require( 'tape' );
var log2 = require( '@stdlib/math/base/special/log2' );
var isInteger = require( '@stdlib/math/base/assert/is-integer' );
var isPow2Uint32 = require( './../lib' );


// TESTS //

tape( 'main export is a function', function test( t ) {
	t.ok( true, __filename );
	t.strictEqual( typeof isPow2Uint32, 'function', 'main export is a function' );
	t.end();
});

tape( 'if provided `0`, the function returns false', function test( t ) {
	t.strictEqual( isPow2Uint32( 0 ), false, 'returns false' );
	t.end();
});

tape( 'the function tests whether an unsigned integer is a power of 2', function test( t ) {
	var expected;
	var bool;
	var i;

	for ( i = 1; i < 1000; i++ ) {
		expected = isInteger( log2( i ) );
		bool = isPow2Uint32( i );
		t.strictEqual( bool, expected, 'returns '+expected+' when provided '+i );
	}
	t.end();
});
