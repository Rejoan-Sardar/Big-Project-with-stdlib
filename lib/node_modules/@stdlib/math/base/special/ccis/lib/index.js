  

'use strict';

/**
* Evaluate the cis function for a double-precision complex floating-point number.
*
* @module @stdlib/math/base/special/ccis
*
* @example
* var Complex128 = require( '@stdlib/complex/float64/ctor' );
* var real = require( '@stdlib/complex/float64/real' );
* var imag = require( '@stdlib/complex/float64/imag' );
* var ccis = require( '@stdlib/math/base/special/ccis' );
*
* var z = new Complex128( 0.0, 0.0 );
* // returns <Complex128>
*
* var out = ccis( z );
* // returns <Complex128>
*
* var re = real( out );
* // returns 1.0
*
* var im = imag( out );
* // returns 0.0
*
* @example
* var Complex128 = require( '@stdlib/complex/float64/ctor' );
* var real = require( '@stdlib/complex/float64/real' );
* var imag = require( '@stdlib/complex/float64/imag' );
* var ccis = require( '@stdlib/math/base/special/ccis' );
*
* var z = new Complex128( 1.0, 0.0 );
* // returns <Complex128>
*
* var out = ccis( z );
* // returns <Complex128>
*
* var re = real( out );
* // returns ~0.540
*
* var im = imag( out );
* // returns ~0.841
*/

// MODULES //

var main = require( './main.js' );


// EXPORTS //

module.exports = main;
