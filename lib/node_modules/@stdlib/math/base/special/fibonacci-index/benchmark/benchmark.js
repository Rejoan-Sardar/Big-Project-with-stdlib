  

'use strict';

// MODULES //

var bench = require( '@stdlib/bench' );
var randu = require( '@stdlib/random/base/randu' );
var floor = require( '@stdlib/math/base/special/floor' );
var isnan = require( '@stdlib/math/base/assert/is-nan' );
var fibonacci = require( '@stdlib/math/base/special/fibonacci' );
var pkg = require( './../package.json' ).name;
var fibonacciIndex = require( './../lib' );


// MAIN //

bench( pkg, function benchmark( b ) {
	var FN;
	var x;
	var y;
	var i;

	FN = new Array( 76 );
	for ( i = 3; i < 79; i++ ) {
		FN[ i ] = fibonacci( i );
	}
	b.tic();
	for ( i = 0; i < b.iterations; i++ ) {
		x = floor( (randu()*75.0) + 3.0 );
		y = fibonacciIndex( FN[ x ] );
		if ( isnan( y ) ) {
			b.fail( 'should not return NaN' );
		}
	}
	b.toc();
	if ( isnan( y ) ) {
		b.fail( 'should not return NaN' );
	}
	b.pass( 'benchmark finished' );
	b.end();
});
