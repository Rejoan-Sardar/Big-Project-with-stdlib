  

'use strict';

// MODULES //

var assign = require( './assign.js' );


// VARIABLES //

var tmp = [ 0.0, 0.0, 0.0, 0.0 ];


// MAIN //

/**
* Compute the Jacobi elliptic function sn(u, m) of number u with modulus m.
*
* @param {number} u - input value
* @param {number} m - modulus `m`, equivalent to `kÂ²`
* @returns {number} sn(u, m)
*
* @example
* var sn = require( '@stdlib/math/base/special/ellipj' ).sn;
* var v = sn( 0.3, 0.5 );
* // returns ~0.293
*
* @example
* v = sn( 0.0, 0.0 );
* // returns ~0.0
*
* @example
* v = sn( Infinity, 1.0 );
* // returns ~1.0
*
* @example
* v = sn( 0.0, -2.0 );
* // returns ~0.0
*
* @example
* v = sn( NaN, NaN );
* // returns NaN
*
*/
function sn( u, m ) {
	assign( u, m, tmp, 1, 0 );
	return tmp[ 0 ];
}


// EXPORTS //

module.exports = sn;
