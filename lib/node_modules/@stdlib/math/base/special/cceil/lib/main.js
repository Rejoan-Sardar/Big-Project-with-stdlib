  

'use strict';

// MODULES //

var Complex128 = require( '@stdlib/complex/float64/ctor' );
var ceil = require( '@stdlib/math/base/special/ceil' );
var real = require( '@stdlib/complex/float64/real' );
var imag = require( '@stdlib/complex/float64/imag' );


// MAIN //

/**
* Rounds a complex number toward positive infinity.
*
* @param {Complex128} z - complex number
* @returns {Complex128} result
*
* @example
* var Complex128 = require( '@stdlib/complex/float64/ctor' );
* var real = require( '@stdlib/complex/float64/real' );
* var imag = require( '@stdlib/complex/float64/imag' );
*
* var v = cceil( new Complex128( -1.5, 2.5 ) );
* // returns <Complex128>
*
* var re = real( v );
* // returns -1.0
*
* var im = imag( v );
* // returns 3.0
*/
function cceil( z ) {
	return new Complex128( ceil( real( z ) ), ceil( imag( z ) ) );
}


// EXPORTS //

module.exports = cceil;
