  

'use strict';

// MODULES //

var isnan = require( '@stdlib/math/base/assert/is-nan' );
var isInteger = require( '@stdlib/math/base/assert/is-integer' );
var pow = require( '@stdlib/math/base/special/pow' );
var sqrt = require( '@stdlib/math/base/special/sqrt' );


// VARIABLES //

var SQRT1O12 = sqrt( 1.0/12.0 );


// MAIN //

/**
* Returns the standard deviation of a discrete uniform distribution.
*
* @param {integer} a - minimum support
* @param {integer} b - maximum support
* @returns {PositiveNumber} standard deviation
*
* @example
* var v = stdev( 0, 1 );
* // returns ~0.5
*
* @example
* var v = stdev( 4, 12 );
* // returns ~2.582
*
* @example
* var v = stdev( -4, 4 );
* // returns ~2.582
*
* @example
* var v = stdev( 1, -0.1 );
* // returns NaN
*
* @example
* var v = stdev( 0.5, 1 );
* // returns NaN
*
* @example
* var v = stdev( 2, NaN );
* // returns NaN
*
* @example
* var v = stdev( NaN, 2 );
* // returns NaN
*/
function stdev( a, b ) {
	if (
		isnan( a ) ||
		isnan( b ) ||
		!isInteger( a ) ||
		!isInteger( b ) ||
		a > b
	) {
		return NaN;
	}
	return SQRT1O12 * sqrt( ( pow( b-a+1, 2.0 ) - 1.0 ) );
}


// EXPORTS //

module.exports = stdev;
