  

'use strict';

// MODULES //

var isnan = require( '@stdlib/math/base/assert/is-nan' );
var pow = require( '@stdlib/math/base/special/pow' );
var PI_SQUARED = require( '@stdlib/constants/float64/pi-squared' );


// MAIN //

/**
* Returns the excess kurtosis for a raised cosine distribution with location `mu` and scale `s`.
*
* @param {number} mu - location parameter
* @param {PositiveNumber} s - scale parameter
* @returns {number} excess kurtosis
*
* @example
* var y = kurtosis( 0.0, 1.0 );
* // returns ~-0.594
*
* @example
* var y = kurtosis( 5.0, 2.0 );
* // returns ~-0.594
*
* @example
* var y = kurtosis( NaN, 1.0 );
* // returns NaN
*
* @example
* var y = kurtosis( 0.0, NaN );
* // returns NaN
*
* @example
* var y = kurtosis( 0.0, 0.0 );
* // returns NaN
*/
function kurtosis( mu, s ) {
	var out;
	if (
		isnan( mu ) ||
		isnan( s ) ||
		s <= 0.0
	) {
		return NaN;
	}
	out = 6.0 * ( 90.0 - ( PI_SQUARED*PI_SQUARED ) );
	out /= 5.0 * pow( PI_SQUARED-6.0, 2.0 );
	return out;
}


// EXPORTS //

module.exports = kurtosis;
