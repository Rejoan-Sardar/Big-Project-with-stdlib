  

'use strict';

// MODULES //

var isnan = require( '@stdlib/math/base/assert/is-nan' );
var exp = require( '@stdlib/math/base/special/exp' );
var pow = require( '@stdlib/math/base/special/pow' );


// MAIN //

/**
* Evaluates the moment-generating function (MGF) for a normal distribution with mean `mu` and standard deviation `sigma` at a value `t`.
*
* @param {number} t - input value
* @param {number} mu - mean
* @param {PositiveNumber} sigma - standard deviation
* @returns {number} evaluated MGF
*
* @example
* var y = mgf( 2.0, 0.0, 1.0 );
* // returns ~7.389
*
* @example
* var y = mgf( 0.0, 0.0, 1.0 );
* // returns 1.0
*
* @example
* var y = mgf( -1.0, 4.0, 2.0 );
* // returns ~0.1353
*
* @example
* var y = mgf( NaN, 0.0, 1.0 );
* // returns NaN
*
* @example
* var y = mgf( 0.0, NaN, 1.0 );
* // returns NaN
*
* @example
* var y = mgf( 0.0, 0.0, NaN );
* // returns NaN
*
* @example
* var y = mgf( 2.0, 0.0, 0.0 );
* // returns NaN
*/
function mgf( t, mu, sigma ) {
	if (
		isnan( t ) ||
		isnan( mu ) ||
		isnan( sigma ) ||
		sigma <= 0.0
	) {
		return NaN;
	}
	return exp( (mu * t) + (0.5 * pow( sigma * t, 2.0 )) );
}


// EXPORTS //

module.exports = mgf;
